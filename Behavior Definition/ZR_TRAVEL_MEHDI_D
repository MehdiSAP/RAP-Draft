managed;// implementation in class zbp_r_travel_mehdi_d unique;
strict ( 2 );
with draft;

define behavior for ZR_TRAVEL_MEHDI_D //alias <alias_name>
implementation in class zbp_travel_mehdi_d unique
persistent table /dmo/a_travel_d
draft table zdr_tra_mehdi_d
lock master
total etag LastChangedAt
authorization master ( instance, global )
etag master LocalLastChangedAt
{
  create ( precheck );
  update ( precheck );
  delete;
  field ( numbering : managed, readonly ) TravelUUID;
  field ( readonly ) TravelID, OverallStatus, TotalPrice, LastChangedAt, LocalCreatedAt, LocalCreatedBy, LocalLastChangedAt, LocalLastChangedBy;

  association _Booking { create ( authorization : update ); with draft;}
  action ( authorization : update ) acceptTravel result [1] $self;
  action ( authorization : update ) rejectTravel result [1] $self;
  action ( authorization : update ) deductDiscout parameter ZA_deduct_discout_Mehdi result [1] $self;
  internal action recalcTotalPrice;

  determination setTravelId on save { create; }
  determination setStatusOpen on modify { create; }
  determination calcTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  side effects { field BookingFee affects field TotalPrice; }

  field ( mandatory ) CustomerID;
  validation validateCustomer on save {create; field CustomerID; }

  draft action Resume with additional implementation;
  draft action Edit with additional implementation;
  draft action Activate optimized with additional implementation;
  draft action Discard with additional implementation;

  draft determine action Prepare{ validation validateCustomer;
                                  validation ZR_BOOKING_MEHDI_D~validateCustomer;
                                  validation ZR_BookingSupplement_Mehdi_D~validateSupplement; }

  mapping for /dmo/a_travel_d
    {
      AgencyID           = agency_id;
      BeginDate          = begin_date;
      BookingFee         = booking_fee;
      CurrencyCode       = currency_code;
      CustomerID         = customer_id;
      Description        = description;
      EndDate            = end_date;
      LastChangedAt      = last_changed_at;
      LocalCreatedAt     = local_created_at;
      LocalCreatedBy     = local_created_by;
      LocalLastChangedAt = local_last_changed_at;
      LocalLastChangedBy = local_last_changed_by;
      OverallStatus      = overall_status;
      TotalPrice         = total_price;
      TravelID           = travel_id;
      TravelUUID         = travel_uuid;
    }
}

define behavior for ZR_BOOKING_MEHDI_D implementation in class zbp_booking_Mehdi_d unique
persistent table /dmo/a_booking_d
draft table zrd_book_mehdi_d
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  field ( numbering : managed, readonly ) BookingUUID;
  field ( readonly ) TravelUUID, BookingID, BookingDate, LocalLastChangedAt;
  association _Travel { with draft; }
  association _BookingSupplement { create ( authorization : update ); with draft; }

  determination setBookingNumber on save { create; }
  determination setBookingDate on save { create; }
  determination calculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }

  side effects { field FlightPrice affects field _Travel.( TotalPrice ); }

  field( mandatory ) CustomerID;
  validation validateCustomer on save {create; field CustomerID; }

  mapping for /dmo/a_booking_d
    {
      AirlineID          = carrier_id;
      BookingDate        = booking_date;
      BookingID          = booking_id;
      BookingStatus      = booking_status;
      BookingUUID        = booking_uuid;
      ConnectionID       = connection_id;
      CurrencyCode       = currency_code;
      CustomerID         = customer_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      LocalLastChangedAt = local_last_changed_at;
      TravelUUID         = parent_uuid;
    }
}

define behavior for ZR_BookingSupplement_Mehdi_D implementation in class zbp_BookSuppl_Mehdi_D unique
persistent table /dmo/a_bksuppl_d
draft table zrd_supp_mehdi_d
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;

  field ( numbering : managed, readonly ) BookSupplUUID;
  field ( readonly ) TravelUUID, BookingUUID, BookingSupplementID, LocalLastChangedAt;
  field ( mandatory ) SupplementID;
  association _Travel { with draft; }
  association _Booking { with draft; }

  determination setBookSupplNumber on save { create; }
  determination calculateTotalPrice on modify { create; field CurrencyCode, BookSupplPrice; }
  side effects { field BookSupplPrice affects field _Travel.( TotalPrice ); }

  validation validateSupplement on save {create; field SupplementID; }


  mapping for /dmo/a_bksuppl_d
    {
      BookSupplPrice      = price;
      BookSupplUUID       = booksuppl_uuid;
      BookingSupplementID = booking_supplement_id;
      BookingUUID         = parent_uuid;
      CurrencyCode        = currency_code;
      LocalLastChangedAt  = local_last_changed_at;
      SupplementID        = supplement_id;
      TravelUUID          = root_uuid;
    }
}
